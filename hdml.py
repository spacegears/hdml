import os
import re
import mimetypes
from datetime import datetime

def get_folder():
    while True:
        target_folder = input("[INPUT] Enter parent folder path: ").strip()
        if os.path.isdir(target_folder):
            return target_folder
        else:
            print(f"[ERROR] The path '{target_folder}' is not a valid directory. Please try again.")

def get_filename():
    while True:
        filename = input("[INPUT] Enter filename: ").strip()
        filename = clean_input(filename)
        return filename
        
def clean_input(input_string):
    pattern = re.compile(r'[^a-zA-Z0-9_-]')
    cleaned_string = pattern.sub('', input_string)
    return cleaned_string

def is_image(file_path):
    mime_type, _ = mimetypes.guess_type(file_path)
    return mime_type and mime_type.startswith('image')

def find_images(target_folder):
    image_paths = []
    for root, _, files in os.walk(target_folder):
        for file in files:
            file_path = os.path.join(root, file)
            if is_image(file_path):
                image_paths.append(file_path)
    return image_paths

def generate_html(filename, filecount, image_paths):
    # Based on https://codepen.io/chriscoyier/pen/jOPdMNJ
    html_content = '<!DOCTYPE HTML>\n'
    html_content += f'<!-- Created: {datetime.now().strftime("%B %d, %Y %H:%M:%S")}. Number of files: {filecount} -->\n'
    html_content += '<!-- Generated by hdml | https://github.com/spacegears/hdml -->\n'
    html_content += '<html>\n'
    html_content += '<head>\n'
    html_content += f'<title>{filename}</title>\n'
    html_content += '''<style>
    body { background: #171717; }
    img { width: 100%; grid-area: 1 / 1 / 2 / 2; }
    .grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); grid-gap: 1rem;
        > .item { background: black; padding: 0.2rem; display: grid; place-items: center;
        &::before { content: ""; display: block; padding-bottom: 100%; grid-area: 1 / 1 / 2 / 2; } } }\n'''
    html_content += '</style>\n'
    html_content += '</head>\n'
    html_content += '<body>\n'
    html_content += '<div class="grid">\n'
    for image_path in image_paths:
        html_content += f'<div class="item"><img src="{image_path}" title="{os.path.splitext(os.path.basename(image_path))[0]}"></div>\n'
    html_content += '</div>\n'
    html_content += '</body>\n'
    html_content += '</html>'
    return html_content

def save_file(html_content, output_path):
    with open(output_path, 'w') as file:
        file.write(html_content)

def main():
    print("[INFO]  hdml by spacegears")
    target_folder = get_folder()
    filename = get_filename()

    image_paths = find_images(target_folder)
    if not image_paths:
        print("[ERROR] No images found in folder.")
        return
    
    print("[INFO]  Generating file...")

    image_paths.sort()
    filecount = len(image_paths)

    html_content = generate_html(filename, filecount, image_paths)
    html_name = filename + '.html'

    script_directory = os.path.dirname(os.path.abspath(__file__))
    output_path = os.path.join(script_directory, html_name)
    # output_path = os.path.join(script_directory, os.path.basename(os.path.normpath(target_folder)) + '.html')

    save_file(html_content, output_path)

    print("----------------------------------------")
    print(f"[INFO]  {html_name} was successfully generated.")
    print(f"[INFO]  file://{output_path}")

if __name__ == "__main__":
    main()
